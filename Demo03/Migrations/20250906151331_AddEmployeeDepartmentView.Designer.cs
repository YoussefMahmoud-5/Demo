// <auto-generated />
using System;
using Demo03.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo03.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20250906151331_AddEmployeeDepartmentView")]
    partial class AddEmployeeDepartmentView
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Demo03.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Demo03.Models.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"));

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateOfCreation")
                        .HasColumnType("date");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Name");

                    b.Property<int?>("MngID")
                        .HasColumnType("int");

                    b.HasKey("DeptId");

                    b.HasIndex("MngID")
                        .IsUnique()
                        .HasFilter("[MngID] IS NOT NULL");

                    b.ToTable("Departments", "dbo");

                    b.HasData(
                        new
                        {
                            DeptId = 1,
                            Code = 100,
                            DateOfCreation = new DateOnly(2024, 4, 13),
                            DepartmentName = "Sales"
                        },
                        new
                        {
                            DeptId = 2,
                            Code = 101,
                            DateOfCreation = new DateOnly(2020, 9, 15),
                            DepartmentName = "HR"
                        },
                        new
                        {
                            DeptId = 3,
                            Code = 102,
                            DateOfCreation = new DateOnly(2025, 5, 30),
                            DepartmentName = "Marketing"
                        },
                        new
                        {
                            DeptId = 4,
                            Code = 103,
                            DateOfCreation = new DateOnly(2019, 11, 1),
                            DepartmentName = "Software Eng."
                        },
                        new
                        {
                            DeptId = 5,
                            Code = 104,
                            DateOfCreation = new DateOnly(2020, 9, 15),
                            DepartmentName = "IT"
                        },
                        new
                        {
                            DeptId = 6,
                            Code = 105,
                            DateOfCreation = new DateOnly(2025, 5, 30),
                            DepartmentName = "Teaching"
                        },
                        new
                        {
                            DeptId = 7,
                            Code = 106,
                            DateOfCreation = new DateOnly(2019, 11, 1),
                            DepartmentName = "Engineering"
                        });
                });

            modelBuilder.Entity("Demo03.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("EmpName");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(4000m);

                    b.HasKey("EmpId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees", "dbo");
                });

            modelBuilder.Entity("Demo03.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Demo03.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Demo03.Models.StudentCourse", b =>
                {
                    b.Property<int>("StdId")
                        .HasColumnType("int");

                    b.Property<int>("CrsId")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasKey("StdId", "CrsId");

                    b.HasIndex("CrsId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("Demo03.Models.Department", b =>
                {
                    b.HasOne("Demo03.Models.Employee", "Manager")
                        .WithOne("ManagedDepartment")
                        .HasForeignKey("Demo03.Models.Department", "MngID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Demo03.Models.Employee", b =>
                {
                    b.HasOne("Demo03.Models.Department", "EmployeeDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("Demo03.Models.Address", "EmpAddress", b1 =>
                        {
                            b1.Property<int>("EmployeeEmpId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Country");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Street");

                            b1.HasKey("EmployeeEmpId");

                            b1.ToTable("Employees", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeEmpId");
                        });

                    b.Navigation("EmpAddress")
                        .IsRequired();

                    b.Navigation("EmployeeDepartment");
                });

            modelBuilder.Entity("Demo03.Models.StudentCourse", b =>
                {
                    b.HasOne("Demo03.Models.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Demo03.Models.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("StdId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Demo03.Models.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Demo03.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Demo03.Models.Employee", b =>
                {
                    b.Navigation("ManagedDepartment");
                });

            modelBuilder.Entity("Demo03.Models.Student", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
